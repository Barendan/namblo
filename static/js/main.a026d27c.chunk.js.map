{"version":3,"sources":["components/BlogList.js","components/Home.js","components/BlogItem.js","components/BlogCreate.js","App.js","index.js"],"names":["BlogList","blogs","className","Card","Group","getPosts","map","blog","fluid","href","_id","Content","Header","title","Meta","author","Description","body","GET_BLOG_POSTS","gql","Home","useQuery","data","isPending","navigate","error","useNavigate","Button","primary","size","onClick","GET_BLOG_POST","REMOVE_BLOG","UPDATE_BLOG","BlogItem","id","useParams","variables","isLoading","useMutation","refetchQueries","blogRemove","blogUpdate","loading","useState","editActive","setEditActive","setTitle","setBody","setAuthor","Form","onSubmit","e","preventDefault","Field","type","required","placeholder","value","onChange","target","TextArea","label","color","disabled","getPost","header","meta","description","CREATE_BLOG_POST","BlogCreate","blogCreate","App","queryClient","QueryClient","client","exact","path","element","ApolloClient","uri","cache","InMemoryCache","ReactDOM","createRoot","document","getElementById","render","ApolloProvider","StrictMode"],"mappings":"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","file":"static/js/main.a026d27c.chunk.js","sourcesContent":["// import { Link } from 'react-router-dom';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nconst BlogList = ({ blogs }) => (\r\n  <div className=\"blog-list\">\r\n    <Card.Group>\r\n      { blogs?.getPosts.map(blog => (\r\n        // <Card \r\n        //   fluid\r\n        //   header={blog.title}\r\n        //   meta={`written by ${blog.author}`}\r\n        //   description={blog.body}\r\n        //   // color='red' \r\n        // />\r\n        \r\n        <Card\r\n          fluid\r\n          key={blog._id}\r\n          href={`/#/blogs/${blog._id}`}\r\n        >\r\n          <Card.Content>\r\n            <Card.Header className=\"card-header\">{blog.title}</Card.Header>\r\n            <Card.Meta>{`written by ${blog.author}`}</Card.Meta>\r\n            <Card.Description>{blog.body}</Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      ))}\r\n    </Card.Group>\r\n  </div>\r\n);\r\n\r\nexport default BlogList;","// import useFetch from './useFetch';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport BlogList from './BlogList.js';\r\n\r\nconst GET_BLOG_POSTS = gql`\r\n  query GetBlogPosts {\r\n    getPosts {\r\n        _id\r\n        title\r\n        body\r\n        author\r\n    }\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  // const { data: blogs, isPending, error } = useFetch('http://localhost:4000/blogs');\r\n  const { data: blogs, isPending, error } = useQuery(GET_BLOG_POSTS);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"main-header\"> Nifty Shifty Blog!</div>\r\n      { isPending && <div> Loading... </div> }\r\n      { blogs && (\r\n        <div>\r\n          <BlogList blogs={blogs} />\r\n          <hr/><br/>\r\n          <Button \r\n            primary\r\n            // color=\"orange\"\r\n            size=\"huge\" \r\n            onClick={() => navigate('/newblog') }\r\n          >Post New Blog </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { gql, useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Button, Card, Form } from 'semantic-ui-react';\r\n\r\nconst GET_BLOG_POST = gql`\r\n    query getBlogPost($id: ID!) {\r\n        getPost (id: $id) {\r\n            _id\r\n            title\r\n            body\r\n            author\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_BLOG = gql`\r\n    mutation removeBlog ($id: ID!) {\r\n        deletePost(id: $id) {\r\n            _id\r\n        }\r\n    }\r\n`;\r\n\r\nconst UPDATE_BLOG = gql`\r\n    mutation UpdatePost($id: ID!, $body: String, $title: String, $author: String) {\r\n        updatePost(id: $id, body: $body, title: $title, author: $author) {\r\n        _id\r\n        title\r\n        body\r\n        author\r\n        }\r\n    }\r\n`;\r\n \r\nconst BlogItem = () => {\r\n    const { id } = useParams();\r\n    const { isLoading, data: blog } =  useQuery(GET_BLOG_POST, { variables: { id: id } });\r\n    const [blogRemove] = useMutation(REMOVE_BLOG,{ refetchQueries: ['GetBlogPosts'] });\r\n    const [blogUpdate, { data, loading, error }] = useMutation(UPDATE_BLOG);\r\n    \r\n    const [editActive, setEditActive] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('Barenboim');\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    const handleClick = () => {\r\n        blogRemove({\r\n            variables: { id },\r\n        });\r\n        navigate('/');\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setEditActive(true);\r\n        setTitle(blog?.getPost.title)\r\n        setBody(blog?.getPost.body)\r\n        setAuthor(blog?.getPost.author)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author };\r\n        \r\n        blogUpdate(\r\n            {variables: { id,\r\n                \"title\": blog.title,\r\n                \"body\": blog.body,\r\n                \"author\": blog.author\r\n            }}\r\n        );\r\n        \r\n        setEditActive(false);\r\n    }\r\n \r\n    return (\r\n        <div className=\"blog-details\">\r\n            {isLoading && <div>Loading...</div>}\r\n            {/* {console.log('show blog', blog?.getPost)} */}\r\n\r\n            { editActive ? (\r\n                <div>\r\n                    <p className=\"main-header\">Edit your post</p>\r\n                    <div className=\"form-container\">\r\n                        <Form onSubmit={handleSubmit}>\r\n\r\n                            <Form.Field>\r\n                                <label>Post Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    required\r\n                                    placeholder='Enter a title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                            </Form.Field>\r\n\r\n                            <Form.Field>\r\n                                <label>Author Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder='Enter your name' \r\n                                    value={author}\r\n                                    onChange={(e) => setAuthor(e.target.value)}\r\n                                    />\r\n                            </Form.Field>\r\n\r\n                            <Form.TextArea \r\n                                label='Post Content' \r\n                                placeholder='Write your heart out...' \r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                                />\r\n\r\n                            <Button size=\"large\" onClick={() => setEditActive(false)}\r\n                            >Back</Button>\r\n                            { !loading && <Button color=\"green\" size=\"large\" type=\"submit\">Update Post</Button>}\r\n                            { loading && <Button disabled color=\"green\" size=\"large\" type=\"submit\">Updating Post</Button>}\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            ) :\r\n            blog?.getPost && (\r\n                <div>\r\n                    <Card \r\n                        // fluid\r\n                        header={blog.getPost.title}\r\n                        meta={`written by ${blog.getPost.author}`}\r\n                        description={blog.getPost.body}\r\n                    />\r\n                    <Button \r\n                        size=\"large\"\r\n                        onClick={() => navigate('/')}\r\n                    >Back</Button>\r\n                    <Button \r\n                        size=\"large\"\r\n                        color=\"green\"\r\n                        onClick={() => handleUpdate()}\r\n                    >Edit</Button>\r\n                    <Button \r\n                        size=\"large\"\r\n                        color=\"red\"\r\n                        onClick={handleClick}\r\n                    >Delete</Button>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogItem;","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { gql, useMutation } from '@apollo/client';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nconst CREATE_BLOG_POST = gql`\r\n    mutation CreatePost($title: String!, $body: String!, $author: String) {\r\n        createPost(title: $title, body: $body, author: $author) {\r\n            _id\r\n            title\r\n            author\r\n        }\r\n    }\r\n`;\r\n \r\nconst BlogCreate = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('Barenboim');\r\n    const [blogCreate, { data, loading, error }] = useMutation(CREATE_BLOG_POST, { refetchQueries: ['GetBlogPosts'] });\r\n    const navigate = useNavigate();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author };\r\n        \r\n        blogCreate({\r\n            variables: { \r\n                \"title\": blog.title,\r\n                \"body\": blog.body,\r\n                \"author\": blog.author\r\n            }\r\n        });\r\n        \r\n        navigate('/');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"create\">\r\n            {/* { isLoading && <div>Loading...</div> } */}\r\n\r\n            <p className=\"main-header\">Add a New Post</p>\r\n            <div className=\"form-container\">\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    <Form.Field required>\r\n                        <label>Post Title</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder='Enter a title'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Author Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder='Enter your name' \r\n                            value={author}\r\n                            onChange={(e) => setAuthor(e.target.value)}\r\n                            />\r\n                    </Form.Field>\r\n\r\n                    <Form.TextArea \r\n                        required\r\n                        label='Post Content' \r\n                        placeholder='Write your heart out...' \r\n                        value={body}\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                        />\r\n\r\n                    <Button size=\"large\" onClick={() => navigate('/')}>Back</Button>\r\n                    { !loading && <Button size=\"large\" color=\"green\" type=\"submit\">Add Post</Button>}\r\n                    { loading && <Button disabled size=\"large\" color=\"green\" type=\"submit\">Adding Post</Button>}\r\n                </Form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogCreate;","import { HashRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport Home from './components/Home';\r\nimport BlogItem from './components/BlogItem';\r\nimport BlogCreate from './components/BlogCreate';\r\n// import NotFound from './NotFound';\r\n\r\n\r\nfunction App() {\r\n  const queryClient = new QueryClient()\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n\r\n        <div className=\"App\">\r\n          {/* <Navbar/> */}\r\n          <div className=\"content\">\r\n            <Routes>\r\n              <Route exact path=\"/\" element={ <Home/> } />\r\n              <Route path=\"/newblog\" element={ <BlogCreate/> }/>\r\n              <Route path=\"/blogs/:id\" element={ <BlogItem/> } />\r\n              {/* <Route path=\"*\" element={} /> */}\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n        \r\n      </Router>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './App.css';\r\n\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://namblo-server.herokuapp.com/',\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <ApolloProvider client={client} >\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ApolloProvider>\r\n);"],"sourceRoot":""}